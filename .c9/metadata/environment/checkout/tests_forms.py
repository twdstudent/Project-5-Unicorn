{"filter":false,"title":"tests_forms.py","tooltip":"/checkout/tests_forms.py","undoManager":{"mark":13,"position":13,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":45},"action":"insert","lines":["from .forms import MakePaymentForm, OrderForm"],"id":1}],[{"start":{"row":0,"column":45},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":2,"column":0},"end":{"row":12,"column":40},"action":"insert","lines":["class TestMakePaymentForm(TestCase):","    ","    def test_can_make_a_payment_with_required_values(self):","        form = MakePaymentForm({","                    'credit_card_number': '4242424242424242', ","                    'cvv': \"111\",","                    'expiry_month': 1,","                    'expiry_year': 2020,","                    'stripe_id': 'l' #This id is a test value but is used correctly on the actual page","        })","        self.assertTrue(form.is_valid())"],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":5}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":32},"action":"insert","lines":["from django.test import TestCase"],"id":6}],[{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":7}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "],"id":8}],[{"start":{"row":15,"column":4},"end":{"row":22,"column":41},"action":"insert","lines":["def test_cannot_make_a_payment_with_required_values(self):","        form = MakePaymentForm({","                    'credit_card_number': '4242424242424242', ","                    'cvv': \"111\", ","                    'expiry_month': 1,","                    'expiry_year': 2020,","        })","        self.assertFalse(form.is_valid())"],"id":9}],[{"start":{"row":22,"column":41},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":23,"column":0},"end":{"row":23,"column":8},"action":"insert","lines":["        "]},{"start":{"row":23,"column":8},"end":{"row":24,"column":0},"action":"insert","lines":["",""]},{"start":{"row":24,"column":0},"end":{"row":24,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":24,"column":0},"end":{"row":38,"column":40},"action":"insert","lines":["class TestOrderForm(TestCase):","    ","    def test_can_make_a_payment_with_required_values(self):","        form = OrderForm({","                    'full_name': \"test\", ","                    'phone_number': \"test\", ","                    'country': \"test\",","                    'postcode': \"test\",","                    'town_or_city': \"test\",","                    'street_address1': \"test\",","                    'street_address2': \"test\",","                    'county': 'test'","                    ","        })","        self.assertTrue(form.is_valid())"],"id":11}],[{"start":{"row":38,"column":40},"end":{"row":38,"column":48},"action":"remove","lines":["        "],"id":12},{"start":{"row":38,"column":40},"end":{"row":39,"column":0},"action":"insert","lines":["",""]},{"start":{"row":39,"column":0},"end":{"row":39,"column":8},"action":"insert","lines":["        "]},{"start":{"row":39,"column":8},"end":{"row":40,"column":0},"action":"insert","lines":["",""]},{"start":{"row":40,"column":0},"end":{"row":40,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":40,"column":4},"end":{"row":51,"column":41},"action":"insert","lines":["def test_cannot_make_a_payment_with_required_values(self):","        form = OrderForm({","                    'full_name': \"test\", ","                    'phone_number': \"test\", ","                    'country': \"test\",","                    'postcode': \"test\",","                    'town_or_city': \"test\",","                    'street_address1': \"test\",","                    'street_address2': \"test\"","                    ","        })","        self.assertFalse(form.is_valid())"],"id":13}],[{"start":{"row":11,"column":37},"end":{"row":11,"column":102},"action":"remove","lines":["#This id is a test value but is used correctly on the actual page"],"id":14}]]},"ace":{"folds":[],"scrolltop":3,"scrollleft":0,"selection":{"start":{"row":11,"column":37},"end":{"row":11,"column":37},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1569453387700,"hash":"67757a4ab8b9b898b368c507b255be31db9155b5"}